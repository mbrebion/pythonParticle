import numpy as np
from numpy import array
import matplotlib.pyplot as plt
import matplotlib
font = {'family': 'times',
        'size': 24}

matplotlib.rc('font', **font)



def som(a,b):
    out = []
    for i in range(len(a)):
        out.append(a[i] + b[i])
    return out

def sub(a,b):
    out = []
    for i in range(len(a)):
        out.append(a[i] - b[i])
    return out


def divide(a,n):
    out = []
    for i in range(len(a)):
        out.append(a[i]/n)
    return out


profile178 = [array([-5.4926679 , -0.86250785, -0.82723614, -0.2901031 ,  0.43753204,
       -0.56731609, -0.05603454,  0.29460738, -0.02524059,  0.58433407,
       -0.67762757, -0.01445982,  0.0702602 , -0.32435976, -0.19496573,
        0.00621164, -0.15196004, -0.33802791,  0.20195134, -0.18995021]), array([-2.21867003e+01, -9.78427975e+00, -1.83334405e+00, -4.60011759e-01,
       -3.93291749e-02,  7.96549252e-02, -6.15097632e-02, -1.17784954e-01,
       -1.78638746e-01,  6.99201920e-04, -2.93675661e-02,  2.43986624e-03,
        7.25292655e-02,  4.41892480e-02,  1.61569793e-02, -2.81911919e-01,
        1.74719381e-01, -3.54690043e-02, -2.80708861e-01, -2.81594323e-01]), array([-2.37437194e+01, -2.13556377e+01, -1.54252432e+01, -8.49491276e+00,
       -3.71002539e+00, -1.71081842e+00, -4.19267736e-01, -2.65963064e-01,
       -2.01316299e-01,  1.17455932e-01,  4.18661286e-01,  2.83944969e-01,
        2.44193781e-01, -7.11475602e-02, -9.68030825e-03,  1.68918366e-01,
        4.42957502e-03,  3.46750319e-02,  1.75841645e-02,  1.87033570e-01]), array([-22.73369956, -24.22335506, -22.93271821, -20.84207493,
       -17.74462112, -14.06408951, -10.76410012,  -7.35187622,
        -4.78040593,  -3.08617225,  -1.82164223,  -0.79830958,
        -0.12648112,   0.28042042,   0.29755974,   0.20052913,
         0.29627692,   0.13525048,   0.05515071,   0.06222673]), array([-23.37724452, -24.66500166, -24.27687791, -24.09271537,
       -23.71315104, -22.73983439, -21.37432279, -19.85307193,
       -18.08977189, -16.00637086, -13.81540076, -11.65618055,
        -9.49936284,  -7.36528159,  -5.53615669,  -3.82793591,
        -2.63553748,  -1.62127178,  -0.80335079,  -0.58433582]), array([-23.62868875, -24.90370224, -24.9626829 , -24.63358227,
       -24.18893226, -23.89673388, -23.67557465, -23.51064898,
       -22.98455944, -22.29156376, -21.45308852, -20.56289776,
       -19.27272999, -17.87960298, -16.47193062, -14.74094448,
       -12.63312751, -10.38634026,  -8.012468  ,  -5.22125349]), array([-23.81944634, -24.80065688, -24.52506087, -24.36424676,
       -24.07843892, -23.75176333, -23.40318941, -22.86011452,
       -22.2978461 , -21.72796942, -20.86675016, -19.87733294,
       -18.81768137, -17.22162833, -15.2138726 , -13.13631488,
       -10.9924637 ,  -8.57830433,  -6.16897838,  -3.75408812]), array([-23.71140509, -23.47325062, -22.29141902, -21.08992184,
       -20.04562004, -18.87803522, -17.51213758, -16.12123431,
       -14.69253142, -13.16777531, -11.74362433, -10.14407762,
        -8.71856356,  -7.41926134,  -6.32851023,  -5.28842251,
        -4.18186207,  -3.21435441,  -2.1975139 ,  -1.11766665]), array([-23.35051492, -21.56523683, -19.53823694, -17.50358957,
       -15.5500099 , -13.62642634, -11.93799998, -10.21529973,
        -8.75803528,  -7.35068319,  -6.08984648,  -5.16987911,
        -4.32801602,  -3.55660355,  -2.79909459,  -2.10592092,
        -1.72353059,  -1.10990082,  -0.53140782,  -0.15142084]), array([-23.85142337, -22.75840461, -21.32234812, -19.88910465,
       -18.4560734 , -17.1015365 , -15.74385982, -14.45475901,
       -13.10650353, -11.82813386, -10.73588076,  -9.38906879,
        -8.0825667 ,  -6.77656026,  -5.60104283,  -4.36268567,
        -3.12567784,  -2.05891859,  -1.0422114 ,  -0.2474775 ]), array([-24.18087765, -23.75905125, -22.99670786, -22.04993998,
       -21.09952454, -20.18171722, -19.15236494, -18.0029486 ,
       -16.83716535, -15.52148084, -13.93222997, -12.51430845,
       -11.06817055,  -9.55905003,  -7.83180025,  -6.08029498,
        -4.21358962,  -2.38380054,  -0.74594197,  -0.08234568]), array([-23.99039718, -22.69524947, -21.03840175, -19.49241237,
       -17.85424819, -16.23125498, -14.66678273, -13.11665865,
       -11.7142763 , -10.37834122,  -9.16052786,  -7.88089933,
        -6.63967707,  -5.43936362,  -4.24800125,  -3.09132516,
        -1.9764453 ,  -0.793553  ,  -0.27291062,   0.        ]), array([-23.9972974 , -22.68662273, -21.20941841, -19.75863077,
       -18.386289  , -16.96372403, -15.43628322, -14.06981102,
       -12.64050493, -11.1658102 ,  -9.69783064,  -8.25787007,
        -6.73942413,  -5.25806683,  -3.84346239,  -2.49032132,
        -1.27677091,  -0.26817221,   0.        ,   0.        ])]


profile356 = [array([-5.36932032, -0.49859833, -0.2930538 , -0.33978586, -0.07800578,
       -0.25083143,  0.02314766,  0.04446888, -0.0637168 ,  0.55617227,
       -0.55443092,  0.02410816,  0.05938798, -0.32618514, -0.2473195 ,
       -0.19957023, -0.25614529, -0.68028652, -0.26956088, -0.28869903]), array([-22.22083733,  -9.68467269,  -1.9150964 ,  -0.30675568,
        -0.07263934,  -0.16546239,  -0.13945475,  -0.28809692,
        -0.07349292,   0.08066384,   0.1238437 ,   0.0406028 ,
         0.07823792,  -0.23307296,   0.12500299,  -0.50135361,
        -0.43777455,  -0.40027568,  -0.65736289,  -0.51138118]), array([-23.67497452, -21.44346459, -15.39771343,  -8.44109858,
        -3.71806663,  -1.44846483,  -0.45792729,  -0.1935777 ,
        -0.29786261,  -0.29607302,   0.10398844,   0.13895998,
         0.13149121,   0.2096098 ,  -0.162862  ,  -0.20291909,
        -0.3193882 ,  -0.16901258,  -0.20928651,  -0.09612053]), array([-22.86451107, -24.39753604, -23.11417587, -20.9544622 ,
       -17.90303562, -14.19785783, -10.68563533,  -7.39385999,
        -4.86325315,  -2.99930137,  -1.85754223,  -1.0202336 ,
        -0.41372049,  -0.15582043,   0.0730418 ,   0.15095534,
         0.30392958,   0.29242633,   0.21844989,   0.11607208]), array([-23.3399906 , -24.69851099, -24.46577598, -24.31769816,
       -23.85198312, -22.94740703, -21.65318006, -20.09569876,
       -18.22587711, -16.17508787, -13.90229393, -11.62051328,
        -9.45622854,  -7.26446825,  -5.52314939,  -3.8489896 ,
        -2.64926656,  -1.7170236 ,  -0.95635381,  -0.53688834]), array([-23.61131174, -24.864598  , -24.80523203, -24.48389893,
       -24.14297057, -23.99618315, -23.74403221, -23.431661  ,
       -22.97796607, -22.28300978, -21.53904294, -20.649152  ,
       -19.42778336, -18.03556356, -16.49066967, -14.68807968,
       -12.62338902, -10.21289059,  -7.74228699,  -5.02968326]), array([-23.86348232, -24.84191795, -24.56934523, -24.36182348,
       -24.09405584, -23.72064121, -23.34415871, -22.82187688,
       -22.21534796, -21.54603069, -20.51206476, -19.47250128,
       -18.24652495, -16.74098789, -15.01472825, -13.12895932,
       -10.95277727,  -8.69706091,  -6.35255126,  -3.91964013]), array([-23.67663395, -23.37002469, -22.20837153, -21.04641236,
       -19.96191745, -18.73770898, -17.40295886, -15.99552067,
       -14.51233755, -13.04725757, -11.69775417, -10.18718705,
        -8.84141983,  -7.52010649,  -6.2583169 ,  -5.16069971,
        -4.12165643,  -3.09002781,  -2.01603415,  -0.99965235]), array([-23.41582588, -21.62885759, -19.56228106, -17.4206985 ,
       -15.38973021, -13.38795675, -11.66727343, -10.17902714,
        -8.79238746,  -7.50828747,  -6.33738153,  -5.33282112,
        -4.53775478,  -3.8224662 ,  -3.16093503,  -2.47133098,
        -1.92039204,  -1.32479533,  -0.74699584,  -0.23181428]), array([-23.87132889, -22.81434603, -21.40514397, -20.02310578,
       -18.60722442, -17.29411554, -15.97247223, -14.60004309,
       -13.25338303, -11.87562398, -10.57511122,  -9.26919228,
        -7.92666814,  -6.67593353,  -5.46521828,  -4.22908471,
        -3.09026299,  -2.01409505,  -0.94944765,  -0.24404254]), array([-24.18943837, -23.80317016, -22.96332531, -21.99119465,
       -20.99281452, -20.01732854, -18.94738662, -17.80030982,
       -16.66807185, -15.41939316, -13.9933396 , -12.55651373,
       -11.06758391,  -9.4608085 ,  -7.81073966,  -6.1082179 ,
        -4.21971694,  -2.3709185 ,  -0.77576356,   0.0366947 ]), array([-23.96446325, -22.65737463, -21.05659608, -19.54760506,
       -18.00874926, -16.44021041, -14.87387463, -13.38049868,
       -11.92434909, -10.54930946,  -9.33453796,  -8.01290755,
        -6.71514294,  -5.48732331,  -4.2994702 ,  -3.08417417,
        -1.94473932,  -0.81112446,  -0.1712933 ,   0.        ]), array([-24.01188519, -22.70903657, -21.2430798 , -19.76093585,
       -18.34537303, -16.88090809, -15.42666706, -14.00870771,
       -12.55579037, -11.08805975,  -9.58436217,  -8.16142222,
        -6.75700809,  -5.31960786,  -3.8777608 ,  -2.54459032,
        -1.25186053,  -0.26180764,   0.        ,   0.        ])]



X = 0.4
Y = 0.4
ls = X/25
nPart = 40000
T = 300
P = 1e5
nWarmUp = 10
nbPts = 20
nbTime = 15

span = nbPts*ls
vel = 25
tAcous = 0.9*X / 414
tMax = tAcous*3

ti = [2.1739130434782614e-05, 6.521739130434785e-05, 0.0001304347826086957, 0.0002608695652173914, 0.0004782608695652175, 0.0007391304347826088, 0.001, 0.0013043478260869566, 0.0016086956521739134, 0.001956521739130435, 0.0023913043478260873, 0.0028260869565217396, 0.003260869565217392]


def plotData(show,textLoc=None):
    nbShow = sum(show)

    n = len(profile356)
    count = 0

    plt.figure(figsize=(16, 8))
    plt.subplots_adjust(left=0.09, right=0.98, top=0.98, bottom=0.11)
    plt.grid()

    for i in range(0,n):
        if show[i] == 0:
            continue
        count +=1
        p = profile356[i]
        pold = profile178[i]
        pnew = p*2 - pold
        dec = np.abs(pnew-pold)/4 + 0.025
        t = ti[i]
        xWall = X*0.9 - vel * t
        xs = [ xWall -(k+0.5)*ls for k in range(nbPts)]

        plt.fill_between(xs, abs(p)-dec, abs(p)+dec, alpha=1, facecolor=((count)/nbShow, 0, 0), label = "$t_{"+str(i+1)+"}/\\tau_a = $" + str(t/tAcous)[:5])
        if textLoc == None:
            plt.text(xWall-(414+25)*t, 6, "$t_"+str(i+1)+"$",color = ((count)/nbShow, 0, 0))
        else:

            plt.text(textLoc[count-1][0], textLoc[count-1][1], "$t_{" + str(i + 1) + "}$",color = ((count)/nbShow, 0, 0))
        plt.plot(xs,abs(p),"o",color = ((count)/nbShow, 0, 0))
    #plt.plot([0.,xWall],[0.,vel],"--b",label="modèle")

    plt.xlabel("$x$ [m]")
    plt.ylabel("|v| [m/s]")
    plt.xlim(0,0.36)
    plt.legend(loc="upper left")
    plt.show()



plotData([1,1,1,1,1,1,0,0,0,0,0,0,0])
#plotData([0,0,0,0,0,1,1,1,1,0,0,0,0])
#plotData([0,0,0,0,0,0,1,0,1,0,1,0,1],textLoc=[[0.125,19],[0.20,11.6],[0.14,16],[0.16,15.2]])
